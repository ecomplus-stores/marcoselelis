<%
const stamps = _.cms('stamps') || {}
let stampsList
if (stamps && Array.isArray(stamps.stamps_list) && stamps.stamps_list.length) {
  stampsList = stamps.stamps_list
}
%>

<div id="product-block" class="product-block">
  <div class="container-fluid px-0">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>

      <div class="row">
        <div class="col-12 col-md-7 mb-4">
          <div id="product-gallery"></div>
        </div>

        <div class="col-12 col-md-5 px-5">
          <div class="sticky  p-5">
            <h1 class="product__name">
              <%= _.ecomUtils.name(_.state) %>
            </h1>
             <p class="product__sku ">
              COD: <%= _.state.sku %>
            </p>
            <!--<% if (_.state.short_description) { %>
              <p class="product__info mt-md-3 pt-3 lead">
                <%= _.state.short_description %>
              </p>
            <% } %> -->
            
            <div id="product-actions">
              <div id="product-loading">
                <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                  <div class="product__price prices prices--big">
                    <strong class="prices__value">
                      <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                    </strong>
                  </div>
                <% } %>

                <% if (_.state.variations && _.state.variations.length) { %>
                  <div data-slot="variations-info">
                    <% if (opt.size_guide && opt.size_guide.image) { %>
                      <% const sizeGuideTitle = opt.size_guide.title || _.dictionary('sizeGuide') %>
                      <div class="mb-3">
                        <a 
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#modal-size-guide"
                        >
                          <i class="i-ruler mr-1"></i> <%= sizeGuideTitle %>
                        </a>
                      </div>
                      <div 
                        class="modal modal-center fade" 
                        id="modal-size-guide" 
                        tabindex="-1" 
                        style="display: none;" 
                        aria-hidden="true"
                      >
                        <div class="modal-dialog">
                          <div class="modal-content">
                            <div class="modal-header d-flex align-items-center justify-content-between">
                              <h5 class="modal-title">
                                <%= sizeGuideTitle %>
                              </h5>
                              <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <img 
                                class="img-fluid" 
                                src="<%= opt.size_guide.image %>" 
                                alt="<%= sizeGuideTitle %>"
                              >
                            </div>
                          </div>
                        </div>
                      </div>
                    <% } %>
                  </div>
                <% } %>

                <div class="spinner-border m-4" role="status">
                  <span class="sr-only">Loading...</span>
                </div>

                <div class="product__buy">
                  <button
                    type="button"
                    class="btn btn-lg btn-primary"
                    onclick="ecomCart.addProduct(storefront.context.body)"
                    <% if (_.state.variations && _.state.variations.length) { %>
                      disabled
                    <% } %>
                  >
                    <div data-slot="buy-button-content">
                      
                      <% if (_.state.kit_composition && _.state.kit_composition.length) { %>
                        <%= _.dictionary('buyKit') %>
                      <% } else { %> 
                        <% let buyText %>
                        <% if (Array.isArray(_.widgets)) { %>
                          <% const productWidget = _.widgets.find(item => item.pkg === '@ecomplus/widget-product') %>
                          <% buyText = productWidget && productWidget.options.buyText %>
                        <% } %>
                        Adicionar ao Carrinho
                      <% } %>
                    </div>
                  </button>
                </div>
              </div>
            </div>  
          </div>       
        </div>
      </div>

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productSlots'
      }) %>
    </section>

    <%- await include('@/helpers/widgets-append', {
      _, opt: {}, field: 'productBlockAppend'
    }) %>



    
  </div>
  <div class="sections pb-1 pb-sm-2 pb-lg-4 mt-md-5 pt-5">
    <!-- <%
    const sku_ = _.state.sku.toLowerCase()
    let cms_product = (_.cms(`apx_products/${sku_}`))
    console.log(cms_product)
    if(Object.keys(cms_product).length === 0){
      cms_product = (_.cms(`apx_products/default`))
    }
    const { sections, customizations } = cms_product
    if (Array.isArray(sections)) {
      for (let i = 0; i < sections.length; i++) {
        const opt = sections[i]
        // quando houver o arquivo specifications.ejs dentro de sections, você pode remover a condição: && opt.type !== 'specifications'
        if (opt && opt.enabled !== false) {
          %>
          <%- await include(`@/sections/${opt.type}`, { _, opt }) %>
          <%
        }
      }
    }      
    %> -->
    <div data-customizations="<%= JSON.stringify(customizations) %>"></div>
  </div>  
</div>
<div class="apx_tabs_content">
  <% if (_.state.body_html) { %>
    <div class="_details content">
      <div class="apx_backdrop" data-tab="details"></div>
      <div class="container-fluid p-5">
        <div class="heading pb-4 mb-4 position-relative">
          <div class="row align-items-start">
            <div class="col">
              <h2 class="mb-3">Detalhes do Produto</h2>
              <p>
                <%= _.state.short_description %>
              </p>
            </div>
            <div class="col-auto">
              <button type="button" class="apx_close" data-tab="details">            
            
                <svg width="13" height="14" viewBox="0 0 13 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <line x1="12" y1="1.70711" x2="0.707107" y2="13" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  <line x1="0.707107" y1="1" x2="12" y2="12.2929" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  
                  
                          </button>
            </div>
          </div>
          
          
          
        </div>
        <div class="scroll-box">
          <div class="markdown pb-4 html-clearfix my-0">
            <%- _.state.body_html.replace(
              /<img ([^/>]+)?src=['"]([^'"]+)['"]([^/>]+)?\/?>/g,
              '<img class="lozad" data-src="$2" $1 $3>'
            ).replace(
              /<img class="lozad" data-src="([^'"]+)"([^>]+)class=['"]([^'"]+)['"]([^/>]+)?>/g,
              '<img class="lozad $3" data-src="$1" $2 $4>'
            ) %>
          </div>
          <div class="markdown html-clearfix my-0">
            <% if (_.state.specifications) { %>
              <section id="product-specs" class="product-specs">
                <div class="container">
                  <ul class="p-0 m-0">
                    
                      <% for (const gridId in _.state.specifications) {
                        if (_.state.specifications[gridId]) {
                          %>
                          <li>
                            <div class="text-muted">
                              <%= _.ecomUtils.gridTitle(gridId, _.grids) %>
                            </div>
                            <div>
                              <%= _.ecomUtils.specTextValue(_.state, gridId, _.grids) %>
                            </div>
                          </li>
                          <%
                        }
                      } %>
                    
                  </ul>
                </div>
              </section>
            <% } %>
            
          </div>
        </div>
      </div>
    </div>
  <% } %>
</div>

<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script id="product-block-jsonld" type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
<script type="text/javascript">
  setTimeout(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const variationId = urlParams.get('variation_id');
    const variations = window._context.body && window._context.body.variations;
    if (Array.isArray(variations) && variationId) {
      const selectedVariation = variations.find(variation => variation._id === variationId);
      if (selectedVariation) {
        const $jsonLd = document.querySelector('#product-block-jsonld');
        const jsonLd = JSON.parse($jsonLd.innerText);
        jsonLd.sku = selectedVariation.sku;
        jsonLd.offers.price = selectedVariation.price;
        jsonLd.name = (selectedVariation.name && selectedVariation.name.replace('"', '')) || jsonLd.name;
        jsonLd.offers.url = `${jsonLd.offers.url}?variation_id=${variationId}`;
        document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
      }
    }
  }, 50);
</script>